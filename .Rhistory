installed.packages("readxl")
installed.packages(readxl)
installed.packages('readxl')
installed.packages("readxls")
cars
# Establecer alturas superiores a 200 o menor de 75 a dato faltante NA
n = 5
n
typeof(n)
n=as.integer("125")
typeof(n)
n
cars
data("cars")
plot(cars,
type="s",
main="Ejemplo de gráfico",
xlab = "Velocidad",
ylab = "Distancia",
cex = 0.5, col = "dark red")
# Gráfico de barras
help("barplot")
barplot(cars$speed,
main = "Velocidades",
xlab = "Frecuencia de velocidades", horiz = TRUE,
col = "blue")
barplot(cars$speed,
main = "Velocidades",
xlab = "Frecuencia de velocidades", horiz = FALSE,
col = "blue")
# Gráfico de barras
help("barplot")
# Histograma
hist(cars$dist,
main = "Distancias recorridas",
xlab = "Distancias",
ylab = "Frecuencias",
xlim = c(50,125),
col = "yellow",
freq = TRUE)
# Histograma
hist(cars$dist,
main = "Distancias recorridas",
xlab = "Distancias",
ylab = "Frecuencias",
xlim = c(100,200),
col = "yellow",
freq = TRUE)
# Histograma
hist(cars$dist,
main = "Distancias recorridas",
xlab = "Distancias",
ylab = "Frecuencias",
xlim = c(25,50),
col = "yellow",
freq = TRUE)
# Gráfico de cajas
boxplot(cars$speed,
main = "Comportamiento promedio de velocidad",
xlab = "Km por hora",
ylab = "Velocidad",
col = "orange", border = "brown",
horizontal = TRUE, notch = TRUE)
View(cars)
min(cars)
min(cars$speed)
max(cars$speed)
View(cars)
airquality
data("airquality")
summarize(group_by(airquality, Month), promedio_mensual_temp = mean(Temp, na.rm = TRUE))
library(dplyr)
summarize(group_by(airquality, Month), promedio_mensual_temp = mean(Temp, na.rm = TRUE))
git
setwd("~/Ciencias de Datos/prácticas")
